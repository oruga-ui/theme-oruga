@use "sass:list";

/* @docs */
$button-background-color: var(--#{$prefix}primary) !default;
$button-color: var(--#{$prefix}primary-invert) !default;
$button-border-radius: var(--#{$prefix}base-border-radius) !default;
$button-border: 1px solid $button-background-color !default;
$button-box-shadow: none !default;
$button-font-weight: 400 !default;
$button-line-height: var(--#{$prefix}base-line-height) !default;
$button-margin-icon-to-text: 0.1875em !default;
$button-margin: 0 !default;
$button-height: $control-height !default;
$button-padding: $control-padding-vertical 0.75em !default;
$button-rounded-border-radius:  #{base-rounded-border-radius} !default;
$button-disabled-opacity:  #{base-disabled-opacity} !default;
$button-outlined-background-color: transparent !default;
/* @docs */

@keyframes spinAround {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(359deg);
  }
}

.o-btn {
  position: relative;
  display: inline-flex;
  cursor: pointer;
  text-align: center;
  white-space: nowrap;
  align-items: center;
  justify-content: center;
  vertical-align: top;
  text-decoration: none;

  @include unselectable;
  -moz-appearance: none;
  -webkit-appearance: none;

  background-color: var(--#{$prefix}button-background-color, $button-background-color);
  color: var(--#{$prefix}button-color, $button-color);
  padding: var(--#{$prefix}button-padding, $button-padding);
  border: var(--#{$prefix}button-border, $button-border);
  border-radius: var(--#{$prefix}button-border-radius, $button-border-radius);
  box-shadow: var(--#{$prefix}button-box-shadow, $button-box-shadow);
  font-size: var(--#{$prefix}base-font-size, $base-font-size);
  font-weight: var(--#{$prefix}button-font-weight, $button-font-weight);
  line-height: var(--#{$prefix}button-line-height, $button-line-height);
  margin: var(--#{$prefix}button-margin, $button-margin);
  height: var(--#{$prefix}button-height, $button-height);

  &__wrapper {
    @include side-flex-gap($button-margin-icon-to-text);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    position: relative;
    width: 100%;
  }

  &__label {
    width: 100%;
  }

  &--expanded {
    width: 100%;
  }

  &--rounded {
    border-radius: var(--#{$prefix}button-rounded-border-radius, $button-rounded-border-radius);
  }

  &--disabled {
    opacity: var(--#{$prefix}button-disabled-opacity, $button-disabled-opacity);
    cursor: not-allowed;
    pointer-events: none;
  }

  @each $name, $value in $sizes {
    &--#{$name} {
      font-size: var(--#{$prefix}button-font-size-#{$name}, $value);
    }
  }

  @each $name, $pair in $colors {
    $color: list.nth($pair, 1);
    $color-invert: list.nth($pair, 2);

    &--#{$name} {
      border-color: transparent;
      background-color: var(--#{$prefix}variant-#{$name}, $color);
      color: var(--#{$prefix}variant-invert-#{$name}, $color-invert);

      &:hover {
        // background-color: darken($color, 2.5%)
        // IE 11 needs polyfill
        filter: brightness(97.5%);
      }
    }
  }

  &--outlined {
    background-color: var(--#{$prefix}button-outlined-background-color, $button-outlined-background-color );
    border-color: var(--#{$prefix}button-background-color, $button-background-color );
    color: var(--#{$prefix}button-background-color, $button-background-color );

    &:hover {
      border-color: transparent;

      background-color: var(--#{$prefix}button-background-color, $button-background-color );
      color: var(--#{$prefix}button-color, $button-color);
    }

    @each $name, $pair in $colors {
      $color: list.nth($pair, 1);
      $color-invert: list.nth($pair, 2);

      &-#{$name} {
        background-color: var(--#{$prefix}button-outlined-background-color, $button-outlined-background-color );
        border-color: var(--#{$prefix}variant-#{$name}, $color);
        color: var(--#{$prefix}variant-#{$name}, $color);

        &:hover {
          border-color: transparent;
          background-color: var(--#{$prefix}variant-#{$name}, $color );
          color: var(--#{$prefix}variant-invert-#{$name}, $color-invert );
        }
      }
    }
  }

  &--loading {
    color: transparent !important;
    pointer-events: none;
  }

  &--loading::after {
    -webkit-animation: spinAround 500ms infinite linear;
    left: calc(50% - 0.5em);
    top: calc(50% - 0.5em);
    position: absolute !important;
    border: 2px solid #dbdbdb;
    border-radius: 9999px;
    border-right-color: transparent;
    border-top-color: transparent;
    content: "";
    display: block;
    height: 1em;
    width: 1em;
  }

  &--inverted {
    background-color: var(--#{$prefix}button-color, $button-color);
    border-color: var(--#{$prefix}button-color, $button-color);
    color: var(--#{$prefix}button-background-color, $button-background-color );

    &:hover {
      // background-color: darken($color-invert, 5%)
      // IE 11 needs polyfill
      filter: brightness(95%);
    }

    @each $name, $pair in $colors {
      $color: list.nth($pair, 1);
      $color-invert: list.nth($pair, 2);

      &-#{$name} {
        background-color: var(--#{$prefix}variant-invert-#{$name}, $color-invert );
        border-color: var(--#{$prefix}variant-invert-#{$name}, $color-invert );
        color: var(--#{$prefix}variant-#{$name}, $color);

        &:hover {
          // background-color: darken($color-invert, 5%)
          // IE 11 needs polyfill
          filter: brightness(95%);
        }
      }
    }
  }
}