@use "sass:list";
@use "sass:color";

/* @docs */
$switch-spacer: 0.5em !default;
$switch-width: 2.75em !default;
$switch-height: 1.5em !default;
$switch-background: var(--#{$prefix}grey-light) !default;
$switch-toggle-background: #f5f5f5 !default;
$switch-border: $control-border-width solid var(--#{$prefix}grey-lighter) !default;
$switch-border-radius: var(--#{$prefix}base-border-radius) !default;
$switch-border-radius-rounded: var(
  --#{$prefix}base-border-radius-rounded
) !default;
$switch-checked-background: var(--#{$prefix}primary) !default;
$switch-disabled-opacity: var(--#{$prefix}base-disabled-opacity) !default;
/* @docs */

@function switchSVG($color) {
  $svg: "<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$color}'/></svg>";

  @return svg-encode($svg);
}

.o-switch {
  @include unselectable;

  cursor: pointer;
  display: block;
  align-items: center;
  position: relative;

  &__input {
    flex-shrink: 0;
    width: var(--#{$prefix}switch-width, $switch-width);
    height: var(--#{$prefix}switch-height, $switch-height);
    margin-top: 0.25em;
    vertical-align: top;
    cursor: pointer;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-color: var(--#{$prefix}switch-background, $switch-background);
    background-image: url(switchSVG($switch-toggle-background));
    background-position: left center;
    background-repeat: no-repeat;
    background-size: contain;
    border: var(--#{$prefix}switch-border, $switch-border);
    border-radius: var(--#{$prefix}switch-border-radius, $switch-border-radius);
    -webkit-print-color-adjust: exact;
    print-color-adjust: exact;
    transition: background-position var(--#{$prefix}transition-duration)
      var(--#{$prefix}transition-timing);

    &:checked {
      background-position: right center;
      background-color: var(
        --#{$prefix}switch-checked-background,
        $switch-checked-background
      );
    }
  }

  // size variants
  @each $name, $value in $sizes {
    &--#{$name} {
      font-size: var(--#{$prefix}font-size-#{name}, $value);
    }
  }

  // color variants
  @each $name, $pair in $colors {
    $color: list.nth($pair, 1);
    &--#{$name} {
      --#{$prefix}focus: #{createFocus($color)};

      input:checked {
        border-color: var(--#{$prefix}#{$name});
        background-color: var(--#{$prefix}variant-#{$name}, $color);
      }
    }

    // possive variant
    &--#{$name}-passive {
      --#{$prefix}focus: #{createFocus($color)};

      input {
        background-color: var(--#{$prefix}#{$name});
        border-color: var(--#{$prefix}#{$name});
      }
    }
  }

  &__label {
    margin-left: var(--#{$prefix}switch-spacer, $switch-spacer);
  }

  &--left {
    display: inline-flex;
    flex-direction: row-reverse;

    .o-switch__label {
      margin-left: 0;
      margin-right: var(--#{$prefix}switch-spacer, $switch-spacer);
    }
  }

  &--rounded .o-switch__input {
    border-radius: var(
      --#{$prefix}switch-border-radius-rounded,
      $switch-border-radius-rounded
    );
  }

  &--disabled {
    opacity: var(--#{$prefix}switch-disabled-opacity, $switch-disabled-opacity);
  }

  // focus effect
  &:focus,
  &:focus-visible,
  &:focus-within {
    .o-switch__input {
      box-shadow: 0 0 0 0.25rem var(--#{$prefix}focus);
      outline: none;
    }
  }
}
