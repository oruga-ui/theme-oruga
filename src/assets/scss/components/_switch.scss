@use "sass:list";
@use "sass:color";

/* @docs */
$switch-spacer: 0.5em !default;
$switch-width: 2.75em !default;
$switch-background: var(--#{$prefix}white) !default;
$switch-toggle-background: color.rgb($grey-light) !default;
$switch-border: $control-border-width solid var(--#{$prefix}grey-lighter) !default;
$switch-border-radius: var(--#{$prefix}base-border-radius) !default;
$switch-border-radius-rounded: var(
  --#{$prefix}base-border-radius-rounded
) !default;
$switch-active-background: var(--#{$prefix}primary) !default;
// $switch-action-background: #f5f5f5 !default;
// $switch-box-shadow:
//   0 3px 1px 0 rgba(0, 0, 0, 0.05),
//   0 2px 2px 0 rgba(0, 0, 0, 0.1),
//   0 3px 3px 0 rgba(0, 0, 0, 0.05) !default;
$switch-disabled-opacity: var(--#{$prefix}base-disabled-opacity) !default;
// $switch-padding: 0.2em !default;
/* @docs */

@function switchSVG($color) {
  @return url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$color}'/></svg>");
}

.o-switch {
  @include unselectable;

  cursor: pointer;
  display: block;
  align-items: center;
  position: relative;

  &__check-switch {
    // height: calc(
    //   (
    //       var(--#{$prefix}switch-width, $switch-width) - var(
    //           --#{$prefix}switch-padding,
    //           $switch-padding
    //         ) *
    //         2
    //     ) *
    //     0.5
    // );
    // width: calc(
    //   (
    //       var(--#{$prefix}switch-width, $switch-width) - var(
    //           --#{$prefix}switch-padding,
    //           $switch-padding
    //         ) *
    //         2
    //     ) *
    //     0.5
    // );
    // background: var(
    //   --#{$prefix}switch-action-background,
    //   $switch-action-background
    // );
    // transition: transform var(--#{$prefix}transition-duration)
    //   var(--#{$prefix}transition-timing);
    // will-change: transform;
    // transform-origin: left;
  }

  &__check {
    // padding: var(--#{$prefix}switch-padding, $switch-padding);
  }

  input {
    flex-shrink: 0;
    width: var(--#{$prefix}switch-width, $switch-width);
    height: calc(var(--#{$prefix}switch-width, $switch-width) * 0.5);
    margin-top: 0.25em;
    vertical-align: top;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-color: var(--#{$prefix}switch-background, $switch-background);
    background-image: switchSVG($switch-toggle-background);
    background-position: left center;
    background-repeat: no-repeat;
    background-size: contain;
    border: var(--#{$prefix}switch-border, $switch-border);
    border-radius: var(--#{$prefix}switch-border-radius, $switch-border-radius);
    -webkit-print-color-adjust: exact;
    print-color-adjust: exact;
    transition: background-position var(--#{$prefix}transition-duration)
      var(--#{$prefix}transition-timing);

    &:checked {
      background-position: right center;
      background-color: var(
        --#{$prefix}switch-active-background,
        $switch-active-background
      );

      background-color: #0d6efd;
      border-color: #0d6efd;

      // .o-switch__check-switch {
      //   transform: translate3d(100%, 0, 0);
      // }
    }
  }

  // size variants
  @each $name, $value in $sizes {
    &--#{$name} {
      font-size: var(--#{$prefix}font-size-#{name}, $value);
    }
  }

  // // color variants
  // @each $name, $pair in $colors {
  //   $color: list.nth($pair, 1);

  //   &--#{$name} {
  //     --#{$prefix}focus: #{createFocus($color)};

  //     .o-switch__check--checked {
  //       background: var(--#{$prefix}variant-#{$name}, $color);
  //     }
  //   }
  //   &--#{$name}-passive {
  //     --#{$prefix}focus: #{createFocus($color)};

  //     .o-switch__check:not(.o-switch__check--checked) {
  //       background: var(--#{$prefix}variant-#{$name}, $color);
  //     }
  //   }
  // }

  // Variant
  @each $name, $pair in $colors {
    $color: list.nth($pair, 1);
    &--#{$name} {
      --#{$prefix}focus: #{createFocus($color)};

      input[type="checkbox"] {
        background-color: transparent;
        border-color: var(--#{$prefix}#{$name});

        --#{$prefix}switch-bg: #{switchSVG($color)};

        &:checked {
          background-color: var(--#{$prefix}variant-#{$name}, $color);
          --#{$prefix}switch-bg: #{switchSVG($white)};
        }
      }
    }

    // possive colors variant
    &--#{$name}-passive {
      --#{$prefix}focus: #{createFocus($color)};

      input[type="checkbox"]:checked {
        background-color: var(--#{$prefix}#{$name});
        border-color: var(--#{$prefix}#{$name});
      }
    }
  }

  &__label {
    margin-left: var(--#{$prefix}switch-spacer, $switch-spacer);
  }

  &--left {
    flex-direction: row-reverse;

    .o-switch__label {
      margin-left: 0;
      margin-right: var(--#{$prefix}switch-spacer, $switch-spacer);
    }
  }

  &--rounded {
    border-radius: var(
      --#{$prefix}switch-border-radius-rounded,
      $switch-border-radius-rounded
    );
  }

  &--disabled {
    opacity: var(--#{$prefix}switch-disabled-opacity, $switch-disabled-opacity);
  }

  // focus effect
  &:focus &__check,
  &:focus-within &__check {
    box-shadow: 0 0 0 0.25rem var(--#{$prefix}focus);
  }
}
